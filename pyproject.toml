[project]
name = "kanso"
version = "0.1.0"
description = "Your minimal money tracker"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "gspread==6.2.1",
    "nicegui==2.21.1",
    "pandas==2.3.1",
    "pydantic==2.10.6",
    "pytest==8.3.4",
    "pytest-asyncio==0.24.0",
    "pytest-cov==6.0.0",
    "python-dotenv==1.1.1",
    "user-agents==2.2.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.6.0",
    "black>=24.3.0",
    "isort>=5.13.2",
    "ruff>=0.3.4",
    "mypy>=1.9.0",
    "pydocstyle>=6.3.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".venv",
    "venv",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true

[tool.pydocstyle]
convention = "google"
add_ignore = [
    "D100",  # Missing docstring in public module
    "D103",  # Missing docstring in public function (allow for simple UI/rendering functions)
    "D104",  # Missing docstring in public package
]
match = ".*\\.py"
match_dir = "^(?!(tests|venv|\\.venv|build|dist)).*"
