name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger for E2E tests

jobs:
  # Detect which files changed to decide which jobs to run
  changes:
    runs-on: ubuntu-latest
    outputs:
      ui: ${{ steps.filter.outputs.ui }}
      code: ${{ steps.filter.outputs.code }}
      static: ${{ steps.filter.outputs.static }}
    steps:
    - uses: actions/checkout@v5
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          # UI files (for E2E smart logic)
          ui:
            - 'app/ui/**'
            - 'app/services/**'
            - 'tests/e2e/**'
            - 'main.py'
            - '.env.test'
            - 'pyproject.toml'
          # Code changes (everything except docs and static assets)
          code:
            - '**'
            - '!**.md'
            - '!docs/**'
            - '!LICENSE'
            - '!.github/**/*.md'
            - '!static/**'
          # Static assets (images, logos, themes)
          static:
            - 'static/**'

  test:
    runs-on: ubuntu-latest
    needs: [changes]
    # Run only if code changed (skip for docs-only or static-only changes)
    if: needs.changes.outputs.code == 'true'

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Install dependencies
      run: |
        uv sync --frozen

    - name: Run tests (unit tests only, excluding E2E)
      run: |
        uv run pytest -m "not e2e" --cov=app --cov-report=term --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
      continue-on-error: true

  lint:
    runs-on: ubuntu-latest
    needs: [changes]
    # Run only if code changed (skip for docs-only or static-only changes)
    if: needs.changes.outputs.code == 'true'

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Install dependencies
      run: |
        uv sync --frozen --all-extras

    - name: Run ruff (linter)
      run: |
        uv run ruff check .

    - name: Run mypy (type checker)
      run: |
        uv run mypy app --ignore-missing-imports
      continue-on-error: true

    - name: Run black (formatter check)
      run: |
        uv run black --check .

  test-e2e:
    runs-on: ubuntu-latest
    needs: [changes]
    # Smart E2E Strategy:
    # ✅ Always run on: push to main, manual trigger
    # ✅ Run on PR when: UI/code files changed OR static assets changed OR [e2e] in commit message
    # ❌ Skip if: [skip e2e] in commit message OR only docs changed
    if: |
      (needs.changes.outputs.code == 'true' || needs.changes.outputs.static == 'true') &&
      !contains(github.event.head_commit.message, '[skip e2e]') && (
        github.event_name == 'push' ||
        github.event_name == 'workflow_dispatch' ||
        needs.changes.outputs.ui == 'true' ||
        contains(github.event.head_commit.message, '[e2e]')
      )

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Install dependencies
      run: |
        uv sync --frozen

    - name: Install Playwright browsers
      run: |
        uv run playwright install --with-deps chromium

    - name: Run E2E tests
      run: |
        uv run pytest tests/e2e/ -v --browser chromium

  docker:
    runs-on: ubuntu-latest
    needs: [changes]
    # Run if code or static files changed (skip for docs-only changes)
    if: needs.changes.outputs.code == 'true' || needs.changes.outputs.static == 'true'

    steps:
    - uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: kanso:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
